// <auto-generated />
using FluentValidationEcommerceImplementation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace FluentValidationEcommerceImplementation.Migrations
{
    [DbContext(typeof(ECommerceDbContext))]
    [Migration("20250829214951_Mig1")]
    partial class Mig1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("FluentValidationEcommerceImplementation.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CategoryId"));

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Electronics",
                            Description = "Electronic gadgets and devices"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "Books",
                            Description = "Various genres of books"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Home Appliances",
                            Description = "Appliances for everyday home use"
                        });
                });

            modelBuilder.Entity("FluentValidationEcommerceImplementation.Models.DiscountRule", b =>
                {
                    b.Property<int>("DiscountRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DiscountRuleId"));

                    b.Property<decimal>("MaximumDiscount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<decimal>("MinimumPrice")
                        .HasColumnType("decimal(10,2)");

                    b.HasKey("DiscountRuleId");

                    b.ToTable("DiscountRules");

                    b.HasData(
                        new
                        {
                            DiscountRuleId = 1,
                            MaximumDiscount = 10m,
                            MinimumPrice = 100m
                        },
                        new
                        {
                            DiscountRuleId = 2,
                            MaximumDiscount = 20m,
                            MinimumPrice = 500m
                        },
                        new
                        {
                            DiscountRuleId = 3,
                            MaximumDiscount = 30m,
                            MinimumPrice = 999m
                        });
                });

            modelBuilder.Entity("FluentValidationEcommerceImplementation.Models.Product", b =>
                {
                    b.Property<int>("ProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductId"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("ProductId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            ProductId = 1,
                            CategoryId = 2,
                            Description = "Bestselling novel with an intriguing plot",
                            Discount = 0m,
                            Name = "Novel",
                            Price = 50m,
                            SKU = "BKN-001",
                            Stock = 100
                        },
                        new
                        {
                            ProductId = 2,
                            CategoryId = 3,
                            Description = "Compact microwave oven suitable for small kitchens",
                            Discount = 10m,
                            Name = "Microwave",
                            Price = 150m,
                            SKU = "APPL-001",
                            Stock = 50
                        },
                        new
                        {
                            ProductId = 3,
                            CategoryId = 1,
                            Description = "Latest model smartphone with advanced features",
                            Discount = 20m,
                            Name = "Smartphone",
                            Price = 800m,
                            SKU = "ELEC-001",
                            Stock = 30
                        },
                        new
                        {
                            ProductId = 4,
                            CategoryId = 1,
                            Description = "High-performance laptop for gaming and productivity",
                            Discount = 30m,
                            Name = "Laptop",
                            Price = 1200m,
                            SKU = "ELEC-002",
                            Stock = 20
                        });
                });

            modelBuilder.Entity("FluentValidationEcommerceImplementation.Models.Product", b =>
                {
                    b.HasOne("FluentValidationEcommerceImplementation.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("FluentValidationEcommerceImplementation.Models.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
